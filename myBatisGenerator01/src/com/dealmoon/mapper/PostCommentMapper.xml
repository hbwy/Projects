<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dealmoon.inter.PostCommentMapper" >
  <resultMap id="BaseResultMap" type="com.dealmoon.model.PostComment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="reply_to" property="replyTo" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.dealmoon.model.PostComment" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, post_id, user_id, reply_to, state, add_time
  </sql>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from post_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dealmoon.model.PostComment" >
    insert into post_comment (id, post_id, user_id, 
      reply_to, state, add_time, 
      message)
    values (#{id,jdbcType=INTEGER}, #{postId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{replyTo,jdbcType=INTEGER}, #{state,jdbcType=CHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dealmoon.model.PostComment" >
    insert into post_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="replyTo != null" >
        reply_to,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="replyTo != null" >
        #{replyTo,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dealmoon.model.PostComment" >
    update post_comment
    <set >
      <if test="postId != null" >
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="replyTo != null" >
        reply_to = #{replyTo,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dealmoon.model.PostComment" >
    update post_comment
    set post_id = #{postId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      reply_to = #{replyTo,jdbcType=INTEGER},
      state = #{state,jdbcType=CHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dealmoon.model.PostComment" >
    update post_comment
    set post_id = #{postId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      reply_to = #{replyTo,jdbcType=INTEGER},
      state = #{state,jdbcType=CHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>